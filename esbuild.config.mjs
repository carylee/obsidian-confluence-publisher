import esbuild from "esbuild";
import process from "process";
import builtins from 'builtin-modules'
import { writeFileSync, copyFileSync } from 'fs';


const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === 'production');

const buildConfig = {
	banner: {
		js: banner,
	},
	entryPoints: ['src/main.ts'],
	bundle: true,
	external: [
		'obsidian',
		'electron',
		'@codemirror/autocomplete',
		'@codemirror/collab',
		'@codemirror/commands',
		'@codemirror/language',
		'@codemirror/lint',
		'@codemirror/search',
		'@codemirror/state',
		'@codemirror/view',
		'@lezer/common',
		'@lezer/highlight',
		'@lezer/lr',
		...builtins
	],
	format: 'cjs',
	target: 'chrome106',
	logLevel: "info",
	sourcemap: prod ? false : 'inline',
	treeShaking: true,
	outdir: prod ? 'dist' : '/Users/cary/Documents/Loom/loom/.obsidian/plugins/obsidian-confluence-publisher',
	mainFields: ['module', 'main'],
	minify: true,
	metafile: true,
};

if (prod) {
	buildConfig.minify = true;
	const buildResult = await esbuild.build(buildConfig);
	writeFileSync("./dist/meta.json", JSON.stringify(buildResult.metafile));
	
	// Copy manifest.json to dist folder
	copyFileSync("./manifest.json", "./dist/manifest.json");
	console.log("âœ… Production build completed!");
} else {
	buildConfig.minify = false;
	const context = await esbuild.context(buildConfig);
	await context.watch();
	console.log("ðŸ‘€ Watching for changes...");
}
