import esbuild from "esbuild";
import process from "process";
import builtins from 'builtin-modules';
import { writeFileSync, copyFileSync, readFileSync } from 'fs';
import dotenv from 'dotenv';

// Load environment variables from .env file
dotenv.config();

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === 'production');

const buildConfig = {
	banner: {
		js: banner,
	},
	entryPoints: ['src/main.ts'],
	bundle: true,
	external: [
		'obsidian',
		'electron',
		'@codemirror/autocomplete',
		'@codemirror/collab',
		'@codemirror/commands',
		'@codemirror/language',
		'@codemirror/lint',
		'@codemirror/search',
		'@codemirror/state',
		'@codemirror/view',
		'@lezer/common',
		'@lezer/highlight',
		'@lezer/lr',
		...builtins
	],
	format: 'cjs',
	target: 'chrome106',
	logLevel: "info",
	sourcemap: prod ? false : 'inline',
	treeShaking: true,
	outdir: prod ? 'dist' : process.env.OBSIDIAN_VAULT_PATH ? 
		`${process.env.OBSIDIAN_VAULT_PATH}/.obsidian/plugins/obsidian-confluence-publisher` : 
		'dist',
	mainFields: ['module', 'main'],
	minify: true,
	metafile: true,
};

if (prod) {
	buildConfig.minify = true;
	const buildResult = await esbuild.build(buildConfig);
	writeFileSync("./dist/meta.json", JSON.stringify(buildResult.metafile));
	
	// Generate manifest.json from package.json
	const pkg = JSON.parse(readFileSync('./package.json', 'utf8'));
	const manifest = {
		id: "confluence-integration",
		name: "Confluence Integration",
		version: pkg.version,
		minAppVersion: "1.0.0",
		description: pkg.description,
		author: pkg.author,
		authorUrl: "https://github.com/andymac4182",
		isDesktopOnly: true
	};
	
	writeFileSync("./dist/manifest.json", JSON.stringify(manifest, null, '\t'));
	console.log("‚úÖ Production build completed!");
} else {
	buildConfig.minify = false;
	const context = await esbuild.context(buildConfig);
	await context.watch();
	
	// Provide helpful feedback about the build destination
	const outdir = process.env.OBSIDIAN_VAULT_PATH 
		? `${process.env.OBSIDIAN_VAULT_PATH}/.obsidian/plugins/obsidian-confluence-publisher`
		: 'dist';
		
	console.log(`üëÄ Watching for changes and building to: ${outdir}`);
	
	if (!process.env.OBSIDIAN_VAULT_PATH) {
		console.warn("‚ö†Ô∏è OBSIDIAN_VAULT_PATH not set in .env file. Building to ./dist instead of your Obsidian vault.");
		console.warn("   Create a .env file with OBSIDIAN_VAULT_PATH=/path/to/your/vault to build directly to your vault.");
	}
}
